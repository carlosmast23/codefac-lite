/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.com.codesoft.codefaclite.controlador.componentes;

import ec.com.codesoft.codefaclite.servidorinterfaz.entity.ComprobanteEntity;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

/**
 *
 * @author Carlos
 */
public class ComponenteDatosComprobanteElectronicosPanel extends javax.swing.JPanel {

    private ComponenteDatosComprobanteElectronicosInterface comprobante;
    /**
     * Creates new form ComponenteDatosComprobanteElectronicosPanel
     */
    public ComponenteDatosComprobanteElectronicosPanel() {
        initComponents();
        listenerBotones();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnObtenerClaveAcceso = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        btnObtenerClaveAcceso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/32Pixeles/datos.png"))); // NOI18N
        btnObtenerClaveAcceso.setToolTipText("Imprimir Clave de Acceso");
        add(btnObtenerClaveAcceso, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObtenerClaveAcceso;
    // End of variables declaration//GEN-END:variables

    private void listenerBotones() {
        btnObtenerClaveAcceso.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                DialogMostrarClaveAcceso dialogo=new DialogMostrarClaveAcceso(null,true);
                dialogo.setClaveAcceso(comprobante.getComprobante().getClaveAcceso());                
                dialogo.setVisible(true);

            }
        });
    }
    
    public void habilitar(boolean habilitar)
    {
        btnObtenerClaveAcceso.setEnabled(habilitar);
    }

    public void setComprobante(ComponenteDatosComprobanteElectronicosInterface comprobante) {
        this.comprobante = comprobante;
    }


    
    
}
